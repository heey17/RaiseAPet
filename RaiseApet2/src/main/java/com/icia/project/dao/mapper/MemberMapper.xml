<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
 "http://mybatis.org/dtb/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<!-- id 중복 검사 -->
	<select id="idOverlap" resultType="String">
		SELECT USERID FROM MEMBERS WHERE USERID=#{userId}
	</select>
	
	<!-- phone 중복 검사 -->
	<select id="phoneOverlap" resultType="String">
		SELECT USERPHONE FROM MEMBERS WHERE USERPHONE=#{userPhone}
	</select>
	
	<!-- email 중복 검사 -->
	<select id="emailOverlap" resultType="String">
		SELECT USEREMAIL FROM MEMBERS WHERE USEREMAIL=#{userEmail}
	</select>
	
	<!-- 회원가입 -->
	<insert id="memberJoin" parameterType="member">
		INSERT INTO MEMBERS (USERID, USERPW, USERNAME, USERIMAGE, USERBIRTH, USERADDRESS, USERGENDER, USEREMAIL, USERPHONE)
		VALUES(#{userId}, #{userPw}, #{userName}, #{userImage}, #{userBirth}, #{userAddress}, #{userGender}, #{userEmail}, #{userPhone})
	</insert>
	
	<!-- 아이디 찾기 -->
	<select id="userIdFind" parameterType="hashMap" resultType="String">
		SELECT USERID FROM MEMBERS WHERE USERNAME=#{userNameKey} AND USEREMAIL=#{userEmailKey}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="userPwFind" parameterType="hashMap" resultType="String">
		SELECT USEREMAIL FROM MEMBERS WHERE USERID=#{userIdKey} AND USERNAME=#{userNameKey} AND USEREMAIL=#{userEmailKey}
	</select>
	
	<!-- 네이버 아이디로 회원가입 -->
	<insert id="memberJoinNaver" parameterType="member">
		INSERT INTO MEMBERS(USERID, USERPW, USERNAME, USERIMAGE, USERBIRTH, USERGENDER, USEREMAIL, USERPHONE, USERNAVER, KEY)
		VALUES(#{userId}, #{userPw}, #{userName}, #{userImage}, #{userBirth}, #{userGender}, #{userEmail}, #{userPhone}, #{userNaver}, 'Y')
	</insert>
	
	<!-- 카카오 아이디로 회원가입 -->
	<insert id="memberJoinKakao" parameterType="member">
		INSERT INTO MEMBERS(USERID, USERPW, USERNAME, USERIMAGE, USERBIRTH, USERGENDER, USEREMAIL, USERPHONE, USERKAKAO, KEY)
		VALUES(#{userId}, #{userPw}, #{userName}, #{userImage}, #{userBirth}, #{userGender}, #{userEmail}, #{userPhone}, #{userKakao}, 'Y')
	</insert>
	
	<!-- 암호화된 비밀번호 가져오기 -->
	<select id="memberEncoderPw" parameterType="String" resultType="String">
		SELECT USERPW FROM MEMBERS WHERE USERID=#{userId}
	</select>
	
	<!-- 일반 로그인 -->
	<select id="memberLogin" parameterType="member" resultType="member">
		SELECT * FROM MEMBERS WHERE USERID=#{userId} AND USERPW=#{userPw}
	</select>
	
	<!-- 네이버 로그인 -->
	<select id="naverLogin" parameterType="String" resultType="member">
		SELECT * FROM MEMBERS WHERE USERNAVER=#{userNaver} AND KEY='Y'
	</select>
	
	<!-- 카카오로 로그인 -->
	<select id="kakaoLogin" parameterType="String" resultType="member">
		SELECT * FROM MEMBERS WHERE USERKAKAO=#{userKakao} AND KEY='Y'
	</select>
	
	<!-- 비밀번호 확인(수정, 탈퇴) -->
	<select id="pwCheck" parameterType="String" resultType="String">
		SELECT USERPW FROM MEMBERS WHERE USERID=#{userId}
	</select>
	
	<!-- 회원 탈퇴 -->
	<delete id="memberDelete">
		DELETE MEMBERS WHERE USERID=#{userId}
	</delete>
	
	<!-- 회원 수정 -->
	<update id="memberModify" parameterType="member">
		UPDATE MEMBERS
		SET USERID=#{userId}, USERPW=#{userPw}, USERNAME=#{userName}, USERIMAGE=#{userImage}, USERADDRESS=#{userAddress}, USEREMAIL=#{userEmail}, USERPHONE=#{userPhone}, USERGENDER=#{userGender}
		WHERE USERID=#{userId}
	</update>
	
	<!-- 로그인 확인 -->
	<select id="loginCheck" parameterType="hashMap" resultType="String">
		SELECT * FROM MEMBERS WHERE USERID=#{userIdKey} AND USERPW=#{userPwKey}
	</select>
	
	<!-- 수정 후 회원 정보 조회 -->
	<select id="selectMember" parameterType="String" resultType="member">
		SELECT * FROM MEMBERS WHERE USERID=#{userId}
	</select>
	
	<!-- 쿠폰함 조회 -->
	<select id="memberCouponList" parameterType="String" resultType="coupon">
		SELECT * FROM COUPON WHERE COUPON.COUPONCODE = (SELECT COUPONCODE FROM MEMBER_COUPON WHERE COUPON.COUPONCODE = MEMBER_COUPON.COUPONCODE AND USERID=#{userId})
	</select>
	
	<!-- 리뷰내역 조회 -->
	<select id="memberReviewList" parameterType="String" resultType="review">
		SELECT * FROM REVIEW WHERE REVIEWUSERID=#{userId}
	</select>
	
	<!-- 문의내역 조회 -->
	<select id="memberAskList" parameterType="String" resultType="goods">
		SELECT * FROM GOODS_ASK WHERE GOODS_ASK.ASKGOODSNUM = (SELECT GOODSNUM FROM GOODS WHERE GOODS.GOODSNUM = GOODS_ASK.ASKGOODSNUM AND ASKUSERID=#{userId})
	</select>
	
	<!-- 장바구니 조회 -->
	<select id="memberBasketList" parameterType="String" resultType="goods">
		SELECT * FROM GOODS, GOODS_BASKET WHERE GOODS.GOODSNUM = GOODS_BASKET.BASKETGOODSNUM AND BASKETUSERID = #{userId}
	</select>
	
	<!-- 장바구니 내역 삭제 -->
	<delete id="basketDelete">
		DELETE GOODS_BASKET WHERE BASKETUSERID=#{userIdKey} AND BASKETGOODSNUM=#{goodsNumKey}
	</delete>
	
	<!-- 쿠폰함 갯수 -->
	<select id="couponCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM MEMBER_COUPON WHERE USERID=#{userId}
	</select>
	
	<!-- 결제내역 조회 - 미용 -->
	<select id="beautyPaymentList" parameterType="String" resultType="beauty">
		SELECT * FROM BEAUTY_DESIGNER, BEAUTY_RESERVATION WHERE BEAUTYRESERVEUSERID=#{userId}
	</select>
	
	<!-- 결제내역 조회 - 호텔 -->
	<select id="hotelPaymentList" parameterType="String" resultType="hotel">
		SELECT * FROM HOTEL, HOTEL_RESERVATION WHERE HOTELUSERID=#{userId}
	</select>
	
	<!-- 결제내역 조회 - 병원 -->
	<select id="medicalPaymentList" parameterType="String" resultType="medical">
		SELECT * FROM MEDICAL_DOCTOR, MEDICAL_RESERVATION WHERE MEDICALRESERVEUSERID=#{userId}
	</select>
	
	<!-- 결제내역 조회 - 용품 -->
	<select id="goodsPaymentList" parameterType="String" resultType="goods">
		SELECT * FROM GOODS, GOODS_BUY WHERE BUYUSERID=#{userId}
	</select>
	
	<!-- 결제내역 - 호텔 - count -->
	<select id="hotelPaymentListCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM HOTEL_RESERVATION WHERE HOTELUSERID=#{userId}
	</select>
	
	<!-- 결제내역 - 미용 - count -->
	<select id="beautyPaymentListCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM BEAUTY_RESERVATION WHERE BEAUTYRESERVEUSERID=#{userId}
	</select>
	
	<!-- 결제내역 - 병원 - count -->
	<select id="medicalPaymentListCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM MEDICAL_RESERVATION WHERE MEDICALRESERVEUSERID=#{userId}
	</select>
	
	<!-- 결제내역 - 용품 - count -->
	<select id="goodsPaymentListCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM GOODS_BUY WHERE BUYUSERID=#{userid}
	</select>
	
	<!-- 리뷰내역 - count -->
	<select id="reviewListCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM REVIEW WHERE REVIEWUSERID=#{userId}
	</select>
	
	<!-- 문의내역 - count -->
	<select id="askListCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM GOODS_ASK WHERE ASKUSERID=#{userId}
	</select>
	
	<!-- 장바구니 - count -->
	<select id="basketListCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM GOODS_BASKET WHERE BASKETUSERID=#{userId}
	</select>
	
	<!-- 결제내역 - 호텔 페이징 -->
	<select id="hotelPagingList" parameterType="hashMap" resultType="hotel">
		SELECT * 
		FROM (SELECT H.*, ROW_NUMBER() OVER(ORDER BY HOTELCODE ASC) AS RN FROM HOTEL_RESERVATION H 
		WHERE HOTELUSERID=#{userIdKey}) WHERE RN BETWEEN #{startRowKey} AND #{endRowKey}
	</select>
	
	<!-- 결제내역 - 미용 페이징 -->
	<select id="beautyPagingList" parameterType="hashMap" resultType="beauty">
		SELECT * 
      	FROM (SELECT H.*, ROW_NUMBER() OVER(ORDER BY BEAUTYRESERVEDESIGNER ASC) AS RN FROM BEAUTY_RESERVATION H WHERE BEAUTYRESERVEUSERID=#{userIdKey}) 
      	WHERE RN BETWEEN #{startRowKey} AND #{endRowKey}
	</select>
	
	<!-- 결제내역 - 병원 페이징 -->
	<select id="medicalPagingList" parameterType="hashMap" resultType="medical">
		SELECT * FROM (SELECT H.*, ROW_NUMBER() OVER(ORDER BY MEDICALRESERVEDOCTOR ASC) AS RN 
		FROM MEDICAL_RESERVATION H WHERE MEDICALRESERVEUSERID=#{userIdKey}) WHERE RN BETWEEN #{startRowKey} AND #{endRowKey}
	</select>
	
	<!-- 결제내역 - 용품 페이징 -->
	<select id="goodsPagingList" parameterType="hashMap" resultType="goods">
		SELECT * 
      	FROM (SELECT H.*,B.*, ROW_NUMBER() OVER(ORDER BY BUYGOODSNUM ASC) 
        AS RN FROM GOODS H, GOODS_BUY B WHERE GOODSNUM = BUYGOODSNUM AND BUYUSERID=#{userIdKey})
      	WHERE RN BETWEEN #{startRowKey} AND #{endRowKey}
	</select>
	
	<!-- 리뷰내역 - 페이징 -->
	<select id="reviewPagingList" parameterType="hashMap" resultType="review">
		SELECT * 
      	FROM (SELECT H.*, ROW_NUMBER() OVER(ORDER BY REVIEWNUM ASC) 
        AS RN FROM REVIEW H WHERE REVIEWUSERID=#{userIdKey})
      	WHERE RN BETWEEN #{startRowKey} AND #{endRowKey}
	</select>
	
	<!-- 문의내역 - 페이징 -->
	<select id="askPagingList" parameterType="hashMap" resultType="goods">
		SELECT * 
      	FROM (SELECT H.*, ROW_NUMBER() OVER(ORDER BY ASKNUM DESC) 
        AS RN FROM GOODS_ASK H WHERE ASKUSERID=#{userIdKey})
      	WHERE RN BETWEEN #{startRowKey} AND #{endRowKey}
	</select>
	
	<!-- 장바구니 - 페이징 -->
	<select id="basketPagingList" parameterType="hashMap" resultType="goods">
		SELECT * FROM (SELECT H.*, ROW_NUMBER() OVER(ORDER BY BASKETGOODSNUM ASC) 
        AS RN FROM GOODS_BASKET, GOODS H WHERE GOODSNUM = BASKETGOODSNUM AND BASKETUSERID=#{userIdKey})
      	WHERE RN BETWEEN #{startRowKey} AND #{endRowKey}
	</select>

</mapper>